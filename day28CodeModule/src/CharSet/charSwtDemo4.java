package CharSet;

public class charSwtDemo4 {
    public static void main(String[] args) {
        //字符流原理解析
        //输入流FileReader
        //1.创建字符输入流对象
            //底层:关联文件，并创建缓冲区(长度为8192的字节数组)
        //2.读取数据
            //底层:1.判断缓冲区中是否有数据可以读取
                //2.缓冲区没有数据:就从文件中获取数据，装到缓冲区中，每次尽可能装满缓冲区
                    //如果文件中也没有数据了，返回-1
                //3.缓冲区有数据:
                    //就从缓冲区中读取。
                    //空参的read方法:一次读取一个字节，遇到中文一次读多个字节，把字节解码并转成十进制返回

        ////输出流FileWriter
            //底层:关联文件，并创建缓冲区(长度为8192的字节数组)
            //调用write方法时，首先会将要写入的数据放到缓冲区，而不是直接写到文件中
            //写到文件的三种情况：
                //1.缓冲区的数组装满了，会将缓冲区的数据放到文件中
                //2.调用flush方法，会刷新缓冲区，将缓冲区的数据放到文件中，但不会关闭文件通道
                //2.调用close方法关闭流，会将缓冲区的数据先放到文件中，然后关闭流

        //字节流和字符流的s使用场景
            //字节流：拷贝任意类型的文件
            //字符流：读取纯文本中的数据
            //字符流：往纯文本文件中写出数据
    }
}
